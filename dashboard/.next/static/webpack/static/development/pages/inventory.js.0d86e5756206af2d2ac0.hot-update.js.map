{"version":3,"file":"static/webpack/static/development/pages/inventory.js.0d86e5756206af2d2ac0.hot-update.js","sources":["webpack:///./components/commons/Table.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fraction } from 'fractional';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n// Util sorting functions.\n// import { stableSort, getSorting } from './sorting/sorting';\n\n// import './Table.css';\n\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#2196f3',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nfunction CustomTable(props) {\n  const { classes, tableHeads, tableName, cols } = props;\n\n  return (\n   \n    <Paper className={classes.root}>\n      <h2 className=\"ui-table-title\">{tableName}</h2>\n      <Table className={classes.table}>       \n        <TableHead>\n          <TableRow>\n            {tableHeads.map((head) => {\n              return (\n                <CustomTableCell numeric={head.isNumeric} key={head.id}>{head.text}</CustomTableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {cols.map(row => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                  {row.SKU}\n                </CustomTableCell>\n                <CustomTableCell>{row.buyer}</CustomTableCell>\n                <CustomTableCell>{row.products}</CustomTableCell>\n                <CustomTableCell>{row.tracking}</CustomTableCell>\n                {cols === 5 ? <CustomTableCell numeric>{row.status}</CustomTableCell> : null}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomTable);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AATA;AAAA;AACA;AAeA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}